What is Tailwind?
===================
- Rapidly build modern websites without ever leaving your HTML

- "Utility-first" means the framworks main focus is on providing utility classes.

Tailwind CSS Installation :
=============================

1. Install Packages

npm install tailwindcss @tailwindcss/postcss postcss

----------------------------------------------------------------------------------------------------------------------------------------

2. Configure PostCSS

Create postcss.config.mjs:

export default {
  plugins: {
    "@tailwindcss/postcss": {},
  }
}

----------------------------------------------------------------------------------------------------------------------------------------

3. Create CSS File

In src/styles.css:

@import "tailwindcss";

----------------------------------------------------------------------------------------------------------------------------------------

4. Add to HTML

In <head> tag:
<link href="/dist/styles.css" rel="stylesheet" />

----------------------------------------------------------------------------------------------------------------------------------------

5. Start Dev Server
Example with Vite:

npm install -D vite
npm run dev

----------------------------------------------------------------------------------------------------------------------------------------

Add to package.json:

"scripts": {
  "dev": "vite"
}

----------------------------------------------------------------------------------------------------------------------------------------

6. Use Tailwind Classes

<h1 class="text-3xl font-bold underline">Hello world!</h1>

----------------------------------------------------------------------------------------------------------------------------------------



📝 Tailwind CSS – Typography Utilities Notes :
=================================================


🔤 Font Family (font-family)
font-sans → Sans-serif

font-serif → Serif

font-mono → Monospace

🔠 Font Size (font-size)
text-xs, text-sm, text-base, text-lg, text-xl, text-2xl, ..., text-9xl

🎨 Font Smoothing (font-smoothing)
antialiased → Smooth font edges

subpixel-antialiased → Sharper, legacy style

✏️ Font Style (font-style)
italic → Italic text

not-italic → Remove italic

💪 Font Weight (font-weight)
font-thin, font-extralight, font-light, font-normal, font-medium, font-semibold, font-bold, font-extrabold, font-black

📏 Font Stretch (Not natively supported in Tailwind)
Use custom CSS or extend via plugin.

🔢 Font Variant Numeric (font-variant-numeric)
normal-nums

ordinal, slashed-zero, lining-nums, oldstyle-nums, proportional-nums, tabular-nums, diagonal-fractions, stacked-fractions

↔️ Letter Spacing (letter-spacing)
tracking-tighter, tracking-tight, tracking-normal, tracking-wide, tracking-wider, tracking-widest

📏 Line Clamp (line-clamp)
Truncate after specific lines (requires plugin)

line-clamp-1 to line-clamp-6, etc.

📐 Line Height (line-height)
leading-none, leading-tight, leading-snug, leading-normal, leading-relaxed, leading-loose, or custom leading-[value]

📋 List Style Image (list-style-image)
Use list-image-[url] in custom utility or via plugin

📍 List Style Position (list-style-position)
list-inside, list-outside

🔢 List Style Type (list-style-type)
list-none, list-disc, list-decimal

⬅️ Text Align (text-align)
text-left, text-center, text-right, text-justify, text-start, text-end

🎨 Text Color (color)
text-[color], e.g. text-gray-500, text-blue-700, text-red-600

🔗 Text Decoration Line
underline, overline, line-through, no-underline

🎨 Text Decoration Color
decoration-[color] (e.g. decoration-red-500)

✏️ Text Decoration Style
decoration-solid, decoration-double, decoration-dotted, decoration-dashed, decoration-wavy

📏 Text Decoration Thickness
decoration-[size] (e.g. decoration-2)

↕️ Text Underline Offset
underline-offset-[size] (e.g. underline-offset-4)

🔠 Text Transform
uppercase, lowercase, capitalize, normal-case

📦 Text Overflow
truncate → Single-line ellipsis

text-ellipsis → Multi-line (with clamp)

text-clip → Cuts off overflow

🔁 Text Wrap
whitespace-nowrap, whitespace-normal, whitespace-pre, etc.

↔️ Text Indent
indent-[value] (e.g. indent-8)

🔼 Vertical Align
align-baseline, align-top, align-middle, align-bottom, align-text-top, align-text-bottom, align-sub, align-super

⬜ White Space (white-space)
whitespace-normal, whitespace-nowrap, whitespace-pre, etc.

🔡 Word Break
break-normal, break-words, break-all

🔄 Overflow Wrap
Same as word-break utilities, handled via break-*

📚 Hyphens
hyphens-none, hyphens-manual, hyphens-auto

✍️ Content (used in pseudo-elements)
content-[attr] → Only works in combination with before: or after:




📏 Tailwind CSS – Sizing Utilities :
=====================================

🔹 Width (w-*)
Fixed sizes:
w-0, w-px, w-1, w-2, ..., w-96

Percentage-based:
w-1/2, w-1/3, w-2/3, w-1/4, ..., w-full

Screen/viewport:
w-screen

Auto/content-based:
w-auto, w-min, w-max, w-fit

🔹 Min Width (min-w-*)
min-w-0, min-w-full, min-w-min, min-w-max, min-w-fit

🔹 Max Width (max-w-*)
Breakpoints:
max-w-xs, max-w-sm, max-w-md, max-w-lg, max-w-xl, max-w-2xl, ..., max-w-7xl

Other values:
max-w-full, max-w-screen-sm, max-w-none, max-w-prose

🔸 Height (h-*)
Fixed sizes:
h-0, h-px, h-1, ..., h-96

Percentage-based:
h-full

Screen-based:
h-screen

Content-based:
h-auto, h-min, h-max, h-fit

🔸 Min Height (min-h-*)
min-h-0, min-h-full, min-h-screen, min-h-min, min-h-max, min-h-fit

🔸 Max Height (max-h-*)
max-h-0, max-h-px, max-h-1, ..., max-h-96

max-h-full, max-h-screen, max-h-min, max-h-max, max-h-fit



📦 Tailwind CSS – Spacing Utilities :
======================================
(padding, margin)

🔹 Padding (p-*)
All sides:
p-0, p-1, ..., p-96, p-px

Individual sides:

pt-* → Top

pr-* → Right

pb-* → Bottom

pl-* → Left

Axis-based:

px-* → Horizontal (left & right)

py-* → Vertical (top & bottom)

🔸 Margin (m-*)
All sides:
m-0, m-1, ..., m-96, m-px

Negative margins:
-m-1, -mt-2, etc.

Individual sides:

mt-* → Top

mr-* → Right

mb-* → Bottom

ml-* → Left

Axis-based:

mx-* → Horizontal

my-* → Vertical

Auto margin (centering):
m-auto, mx-auto

📏 Spacing Scale (common for both)
0, px, 0.5, 1, 1.5, 2, ..., up to 96

Custom values: p-[10px], m-[2rem]




🧱 Tailwind CSS – Flexbox & Grid Utilities :
=================================================


🔹 Flexbox
✅ flex-basis
basis-0, basis-1/2, basis-full, basis-[value]

✅ flex-direction
flex-row, flex-row-reverse

flex-col, flex-col-reverse

✅ flex-wrap
flex-wrap, flex-nowrap, flex-wrap-reverse

✅ flex
flex-1, flex-auto, flex-initial, flex-none

Shorthand for flex-grow, flex-shrink, and basis

✅ flex-grow
grow, grow-0

✅ flex-shrink
shrink, shrink-0

✅ order
order-1 to order-12, order-first, order-last, order-none

🔷 Grid
✅ grid-template-columns
grid-cols-1, grid-cols-2, ..., grid-cols-12

Custom: grid-cols-[value]

✅ grid-column
col-span-1 to col-span-12

col-start-*, col-end-*

✅ grid-template-rows
grid-rows-1, ..., grid-rows-6, grid-rows-none

✅ grid-row
row-span-*, row-start-*, row-end-*

✅ grid-auto-flow
grid-flow-row, grid-flow-col, grid-flow-row-dense, grid-flow-col-dense

✅ grid-auto-columns
auto-cols-auto, auto-cols-min, auto-cols-max, auto-cols-fr

✅ grid-auto-rows
auto-rows-auto, auto-rows-min, auto-rows-max, auto-rows-fr

🧩 Shared (Flex & Grid)
✅ gap
gap-0, gap-1, ..., gap-12

gap-x-*, gap-y-*

✅ justify-content (justify-*)
justify-start, justify-center, justify-end, justify-between, justify-around, justify-evenly

✅ justify-items
justify-items-start, justify-items-center, justify-items-end, justify-items-stretch

✅ justify-self
justify-self-auto, justify-self-start, justify-self-center, justify-self-end, justify-self-stretch

✅ align-content
content-start, content-center, content-end, content-between, content-around, content-evenly

✅ align-items
items-start, items-center, items-end, items-baseline, items-stretch

✅ align-self
self-auto, self-start, self-center, self-end, self-stretch

✅ place-content
place-content-center, place-content-start, place-content-end, place-content-between, place-content-around, place-content-evenly

✅ place-items
place-items-start, place-items-center, place-items-end, place-items-stretch

✅ place-self
place-self-auto, place-self-start, place-self-center, place-self-end, place-self-stretch



🌐 Tailwind CSS – Responsive Breakpoints :
=========================================== 

Tailwind uses mobile-first breakpoints – styles are applied from the smallest screen up.

📏 Default Breakpoints
Prefix	Min Width	Usage Example
sm:	640px	sm:text-lg
md:	768px	md:grid-cols-2
lg:	1024px	lg:justify-center
xl:	1280px	xl:p-10
2xl:	1536px	2xl:text-3xl

🛠️ Usage Syntax

<h1 class="text-base md:text-lg lg:text-2xl">Responsive Text</h1>
The text size increases at md and again at lg.

🎯 Custom Breakpoints
You can define custom breakpoints in tailwind.config.js:

export default {
  theme: {
    extend: {
      screens: {
        'xs': '480px',
        '3xl': '1600px',
      }
    }
  }
}



Apply Directive :
================

- Use @apply to inline any existing utility classes into your own custom css.



🛠️ Syntax:

.btn {
  @apply px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600;
}
This creates a reusable .btn class using Tailwind utilities.

📁 Where to Use It:
Use @apply in your custom CSS files that are processed by Tailwind/PostCSS, e.g. styles.css, global.css.

💡 Best Use Cases:

Buttons

Cards

Form fields

Reusable design components

⚠️ Limitations:
Cannot apply responsive (md:), pseudo-class (hover:), or variant utilities alone. Use full utility with variant:

.btn {
  @apply text-white hover:bg-blue-700; /* ✅ allowed */
}
🔧 Example:

/* styles.css */
.card {
  @apply p-6 bg-white shadow-md rounded-lg;
}

<div class="card">Hello!</div>


