What is Git?

- Git is fast and scalable.
- it is most popular VCS.
- Free & Open Source Version Control System.
- Tool that help to tracks changes in code.
- help to collaborate.
- track history.


What is Github?

- Website where we host repositories online.



Git Using :

1) git config --global user.name "My Name"   OR
1) git config --global user.email "myemail123@gmail.com"










Basic commands :

clone :  cloning a repository on our local machine.

git clone <- some link ->


status : display the state of the code.

git status



file status lifecycle :

Untracked â†’ Staged â†’ Committed â†’ Modified â†’ Staged â†’ Committed â†’ Deleted â†’ Staged Deletion â†’ Committed
 
Untracked :
- You create a new file.txt in your working directory. Git doesnâ€™t know about it yet.
ðŸ‘‰ git status shows: Untracked files: file.txt

Tracked â†’ Modified :
- You add file.txt to Git with:
git add file.txt â†’ Now it's staged for commit.
git commit -m "Add file.txt" â†’ Now itâ€™s committed.
If you now edit it, it becomes modified.
ðŸ‘‰ git status shows: modified: file.txt


Staged :
- After editing, you run git add file.txt again to stage changes for the next commit.
ðŸ‘‰ git status shows: Changes to be committed: modified: file.txt

Committed :
- You run git commit -m "Update file.txt" â†’ changes saved in local repo.

Deleted (working dir) :	
- You delete file.txt from your file system â†’ Git notices.
ðŸ‘‰ git status shows: deleted: file.txt


Staged Deletion	:
- Run git rm file.txt or git add -u to stage the deletion.
ðŸ‘‰ git status shows: Changes to be committed: deleted: file.txt

Restored :
- If you didnâ€™t commit yet and want to bring it back:
git restore file.txt

Ignored (optional) :    
- If you add file.txt to .gitignore, Git will ignore it completely.
Useful for temp or sensitive files.



add : add new or changed files in your working directory  to the Git staging area.

git add <- file name ->


commit : it is the record of changes.

git commit -m "Some message"


push : upload local content to remote repo.

git push origin main


init : used to create a new a git repo.

git init


git remote ass origin <- link ->

git remote -v (to verify remote)

git branch (to check branch)

git branch main ( to rename branch)

git push origin main


git push -u origin main
git push





Git Branches :
- In Git, branches are a part of your everyday development process. Git branches are effectively a pointer to a snapshot of your changes. When you want to add a new feature or fix a bugâ€”no matter how big or how smallâ€”you spawn a new branch to encapsulate your changes.


Branches commands :

git branch

git branch -M main (to rename branch)

git checkout <- branch name -> (to navigate)

git checkout -b <- new branch name -> (to create new branch)


git branch -d <- branch name ->  ( to delete branch )


Merge Branch :

git diff <- branch name ->  ( compare commits, branches, file & more )

git merge <- branch name -> ( to merge 2 branch)

OR
Create a PR







